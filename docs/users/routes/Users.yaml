paths:
  /api/users/current:populate:
    get:
      summary: Get the current authenticated user with optional population of related entities (Carts)
      tags:
        - Users
      parameters:
        - in: path
          name: populate
          schema:
            type: boolean
          description: Whether to populate related entities or not (Cart products)
          required: false
          example: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: "Error: Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
        '403':
          description: "Error: Forbidden"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string 
        '500':
          description: "Error: Internal Server Error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
      security:
        - jwtAuth: []

  /api/users/currentPwd:
    put:
      summary: Reset the password for the current authenticated user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  format: password
                  required: true
                  example: 1bC45@7
      description: >
        The new password. Must meet the following criteria:
        - Contains at least one special character
        - Contains at least one number
        - Contains at least one uppercase letter
        - Contains at least one lowercase letter
        - Is more than 6 characters long
      responses:
        '200':
          description: Password reset successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: "Error: Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
        '401':
          description: "Error: Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
        '403':
          description: "Error: Forbidden"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string 
        '500':
          description: "Error: Internal Server Error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
      security:
        - jwtAuth: []

  /api/users/current:
    put:
      summary: "Update the current authenticated user's information."
      tags:
        - Users
      description: "Allowed fields to be modified are: first_name, last_name, age, phone, address, city_locality, postal_code, country_code"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/requestBodies/UpdateUser'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: "Error: Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
        '401':
          description: "Error: Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
        '403':
          description: "Error: Forbidden"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string 
        '500':
          description: "Error: Internal Server Error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
      security:
        - jwtAuth: []

  /api/users/{id}:
    get:
      summary: Get a user by ID (Admin only)
      tags:
        - Users
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: User ID
          example: "87f77703-f33b-41a5-a114-a87dea4d98e3"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: "Error: Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
        '403':
          description: "Error: Forbidden"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
        '404':
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
        '500':
          description: "Error: Internal Server Error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
      security:
        - jwtAuth: []
  /api/users/{id}/thumbnailUrl:
    put:
      summary: Update user's profile pic by ID
      tags:
        - Users      
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: User ID
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                thumbnail:
                  type: string
                  format: binary
      responses:
        '200':
          description: Thumbnail updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: "Error: Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
        '401':
          description: "Error: Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string 
        '403':
          description: "Error: Forbidden"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string 
        '404':
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
        '500':
          description: "Error: Internal Server Error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string  
  /api/users/{id}/documents:
    put:
      summary: Update user's profile documents by ID
      tags:
        - Users      
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: User ID
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                documents:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '200':
          description: Documents updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: "Error: Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
        '401':
          description: "Error: Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string 
        '403':
          description: "Error: Forbidden"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string 
        '404':
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
        '500':
          description: "Error: Internal Server Error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string  
  /api/users/premium/{id}:
    put:
      summary: Add Premium role to user's role by ID
      tags:
        - Users      
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: User ID
      responses:
        '200':
          description: Roles updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: "Error: Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string 
        '403':
          description: "Error: Forbidden"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string 
        '404':
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
        '500':
          description: "Error: Internal Server Error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string  
      security:
        - jwtAuth: []
