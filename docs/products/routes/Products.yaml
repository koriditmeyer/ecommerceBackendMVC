paths:
  /api/products:
    get:
      summary: Get a list of products based on query parameters
      tags:
        - Products
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
          description: Limit number of products returned. Must be between [0,100]
          example: 10
        - in: query
          name: page
          schema:
            type: integer
          description: Page number for pagination
          example: 1
        - in: query
          name: category
          schema:
            type: string
          description: Filter by product category
          example: 6dbfb96f-5e44-41e3-9d4b-1c02fb00bb86
        - in: query
          name: subCategory
          schema:
            type: string
          description: Filter by product sub-category
          example: 104        
        - in: query
          name: searchTerm
          schema:
            type: string
          description: Search term for product titles
          example: luggage
        - in: query
          name: badge
          schema:
            type: string
          description: Search term for product badge
          example: bestseller
        - in: query
          name: sort
          schema:
            type: string
          description: Sort order, 'asc' or 'desc'
          example: asc
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  payload:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
        '404':
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
        '500':
          description: "Error: Internal Server Error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string                    
    post:
      summary: Add a new product
      tags:
        - Products      
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/requestBodies/CreateProduct'
      responses:
        '201':
          description: Product created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: "Error: Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string 
        '401':
          description: "Error: Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string 
        '403':
          description: "Error: Forbidden"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string 
        '409':
          description: "Error: Conflict"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string 
        '500':
          description: "Error: Internal Server Error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string   
      security:
        - jwtAuth: []
  /api/products/{id}:
    get:
      summary: Get a product by ID
      tags:
        - Products      
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Product ID
          example: e15e6cb6-faa5-410b-85b1-01d1fa1595cf 
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
        '500':
          description: "Error: Internal Server Error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string   
    put:
      summary: Update a product by ID
      tags:
        - Products      
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Product ID
          example: 6d08d5cf-9fd4-4457-b0b3-5452f17a09d2
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/requestBodies/UpdateProduct'
      responses:
        '200':
          description: Product updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '401':
          description: "Error: Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string 
        '403':
          description: "Error: Forbidden"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string 
        '404':
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
        '500':
          description: "Error: Internal Server Error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string  
      security:
        - jwtAuth: []
    delete:
      summary: Delete a product by ID
      tags:
        - Products
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Product ID
      responses:
        '200':
          description: Product deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '401':
          description: "Error: Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string 
        '403':
          description: "Error: Forbidden"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string 
        '404':
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
        '500':
          description: "Error: Internal Server Error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string  
      security:
        - jwtAuth: []
  /api/products/{pid}/thumbnailUrl:
    put:
      summary: Update product's thumbnail by ID
      tags:
        - Products      
      parameters:
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: Product ID
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                thumbnail:
                  type: string
                  format: binary
      responses:
        '200':
          description: Thumbnail updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '401':
          description: "Error: Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string 
        '403':
          description: "Error: Forbidden"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string 
        '404':
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
        '500':
          description: "Error: Internal Server Error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string  
      security:
        - jwtAuth: []
